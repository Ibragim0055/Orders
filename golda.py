import asyncio
import random
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state, State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
import asyncpg
import pytz
from datetime import datetime

bot = Bot(token="7062461826:")
dp = Dispatcher(storage=MemoryStorage())

async def cr():
    conn = await asyncpg.connect(user='postgres', password='8967824ib', host='localhost', database='golda') 
    return conn 

async def golda_table():
    conn = await cr()
    await conn.execute('''create table gold (
    id BIGSERIAL PRIMARY KEY,
    user_id bigint unique,
	username text,
	balance bigint,
	sum_p bigint,
	sum_v bigint,
	referrals bigint,
	referrer bigint,
	user_start text
)''') 
    await conn.close() 

async def bot_table():
    conn = await cr()
    await conn.execute('''create table bot (
    id BIGSERIAL PRIMARY KEY,
    sum_v bigint,
	sum_users bigint,
	count_otziv bigint
)''') 
    await conn.close() 


async def data_start():
    moscow = pytz.timezone('Europe/Moscow')
    time = datetime.now(moscow)
    t = time.strftime('%Y-%m-%d %H:%M:%S')
    return t


async def user_f(message: Message):
    conn = await cr()
    user = await conn.fetchrow('''SELECT * FROM gold WHERE user_id=$1''', message.from_user.id)
    return user


ID_CHANNEL_O = -1002094096537
ID_CHANNEL = -1002061793435

user_promo = {}
list_promo = {}
sum_user = {}
sum_user_v = {}
sum_user_p = {}


class kup_gold(StatesGroup):
    sum = State()

class kup_gold1(StatesGroup):
    sum = State()

class kup_gold2(StatesGroup):
    sum = State()


class viv(StatesGroup):
    sum = State()
    scrin = State()
    nik = State()

class pop(StatesGroup):
    sum = State()
    scrin = State()

class prom(StatesGroup):
    name = State()
    count = State()
    gold = State()

class prom_a(StatesGroup):
    name = State()



@dp.message(Command('start'))
async def start(message: Message):
    referrer_id = message.text.split()[1] if len(message.text.split()) > 1 else None
    conn = await cr()
    user = await user_f(message)
    if user:
        await start_menu(message)
    else:
        await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!')
        if referrer_id and int(referrer_id) != int(message.from_user.id):
            await bot.send_message(int(referrer_id), text=f"–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –Ω–æ–≤–æ–≥–æ<a href='tg://user?id={message.from_user.id}'> —Ä–µ—Ñ–µ—Ä–∞–ª–∞! </a>", parse_mode='HTML')
            await conn.execute('''UPDATE gold SET referrals = referrals + 1 WHERE user_id=$1''', int(referrer_id)) 
            await conn.execute('''INSERT INTO gold (user_id, username, balance, sum_p, sum_v, referrals, referrer, user_start) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)''', message.from_user.id, message.from_user.username, 0, 0, 0, 0, int(referrer_id), await data_start()) 
        else:
            await conn.execute('''INSERT INTO gold (user_id, username, balance, sum_p, sum_v, referrals, referrer, user_start) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)''', message.from_user.id, message.from_user.username, 0, 0, 0, 0, None, await data_start()) 
        await conn.execute('''UPDATE bot SET sum_users = sum_users + 1''')
        await start_menu(message)


async def start_menu(message: Message):
    a_button = KeyboardButton(text='üí∞ –ö—É–ø–∏—Ç—å Gold')
    b_button = KeyboardButton(text='‚ö° –í—ã–≤–µ—Å—Ç–∏ Gold')
    c_button = KeyboardButton(text='üî¢ –ü–æ—Å—á–∏—Ç–∞—Ç—å')
    d_button = KeyboardButton(text='üë§ –ü—Ä–æ—Ñ–∏–ª—å')
    e_button = KeyboardButton(text='üìñ –ü–æ–º–æ—â—å')
    f_button = KeyboardButton(text='ü§ç –û—Ç–∑—ã–≤—ã')
    button   = ReplyKeyboardMarkup(keyboard=[[a_button, b_button], [c_button, d_button], [e_button, f_button]], resize_keyboard=True, one_time_keyboard=True)
    await bot.send_message(message.from_user.id, text='üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.\n\n–ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–µ, –ø–µ—Ä–µ–π–¥–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É ¬´üí∞–ö—É–ø–∏—Ç—å Gold¬ª.\n\nüìñ –ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏ –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ —á–µ—Ä–µ–∑ –∫–æ–ø–∫—É "üìñ –ü–æ–º–æ—â—å"', reply_markup=button)

@dp.message(F.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def –ì–ª–∞–≤–Ω–æ–µ_–º–µ–Ω—é(message: Message, state: FSMContext):
    await state.clear()
    await start_menu(message)


@dp.message(F.text == 'üí∞ –ö—É–ø–∏—Ç—å Gold')
async def –ö—É–ø–∏—Ç—å–ì–æ–ª–¥—É(message: Message, state: FSMContext):
    a_button = KeyboardButton(text='üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    button   = ReplyKeyboardMarkup(keyboard=[[a_button]], resize_keyboard=True, one_time_keyboard=True)
    await bot.send_message(message.from_user.id, text='üçØ –ß—Ç–æ–±—ã –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ì–æ–ª–¥—É, –≤–≤–µ–¥–∏ –≤ —á–∞—Ç —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å\n\nüí°–ù–∞–ø—Ä–∏–º–µ—Ä: 100', reply_markup=button)
    await state.set_state(kup_gold.sum)

@dp.message(StateFilter(kup_gold.sum))
async def –ö—É–ø–∏—Ç—å–ì–æ–ª–¥—É_–≤–≤–æ–¥(message: Message, state: FSMContext):
    global sum_user
    if message.text.isdigit():
        if int(message.text) >= 30:
            sum = (int(message.text) * 0.20) + (int(message.text))
            sum_user = {}
            sum_user[message.from_user.id] = kup_gold()
            sum_user[message.from_user.id].—Ä—É–± = message.text
            sum_user[message.from_user.id].—Å—É–º–º–∞ = sum
            a_button = InlineKeyboardButton(text='–¢–∏–Ω—å–∫–æ—Ñ—Ñ', callback_data='–¢–∏–Ω—å–∫–æ—Ñ—Ñ')
            b_button = InlineKeyboardButton(text='–°–±–µ—Ä', callback_data='–°–±–µ—Ä')
            button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button]])
            await bot.send_message(message.from_user.id, text=f'üí∞ –ó–∞ {message.text} ‚ÇΩ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ: {float(sum)}  G.\n\nüëá –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:', reply_markup=button)
            await state.clear()
        else:
            await message.answer('‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 30 RUB')
    else:
        if message.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            pass
        else:
            await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ ‚ö†Ô∏è')
    
        
@dp.callback_query(F.data.in_(['–¢–∏–Ω—å–∫–æ—Ñ—Ñ', '–°–±–µ—Ä', '–°–ë–ü']))
async def —Å–ø–æ—Å–æ–±_–ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è(callback: CallbackQuery, state: FSMContext):
    try:
        rub = sum_user[callback.from_user.id].—Ä—É–±
        sum = sum_user[callback.from_user.id].—Å—É–º–º–∞
        a_button = InlineKeyboardButton(text='<–ò–∑–º–µ–Ω–∏—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã', callback_data='–ò–∑–º–µ–Ω–∏—Ç—å_—Å–ø–æ—Å–æ–±_–æ–ø–ª–∞—Ç—ã')
        button = InlineKeyboardMarkup(inline_keyboard=[[a_button]])
        if callback.data == '–¢–∏–Ω—å–∫–æ—Ñ—Ñ' or callback.data == '–°–±–µ—Ä':
            await callback.message.edit_text(f'‚òéÔ∏è –ù–æ–º–µ—Ä: <code>122</code>\n\n–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –°–µ—Ä–≥–µ–µ–≤–∏—á –ë.\n\nüí∞ –°—É–º–º–∞: {rub} RUB\nüçØ –ò–≥—Ä–æ–≤–∞—è –∫–æ–º–∏—Å—Å–∏—è —Ä—ã–Ω–∫–∞ –Ω–∞ –Ω–∞—Å. –í–∞–º –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–¥–µ—Ç —Ä–æ–≤–Ω–æ: {sum}G.\n\nüì∏ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ ‚§µÔ∏è', parse_mode='HTML', reply_markup=button)
            await state.set_state(pop.scrin)
    except:
       await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É!')
       await start_menu(callback)

@dp.callback_query(F.data == '–ò–∑–º–µ–Ω–∏—Ç—å_—Å–ø–æ—Å–æ–±_–æ–ø–ª–∞—Ç—ã')
async def –ò–∑–º–µ–Ω–∏—Ç—å_—Å–ø–æ—Å–æ–±_–æ–ø–ª–∞—Ç—ã(callback: CallbackQuery):
    try:
        a_button = InlineKeyboardButton(text='–¢–∏–Ω—å–∫–æ—Ñ—Ñ', callback_data='–¢–∏–Ω—å–∫–æ—Ñ—Ñ')
        b_button = InlineKeyboardButton(text='–°–±–µ—Ä', callback_data='–°–±–µ—Ä')
        button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button]])
        await callback.message.edit_text(f'üí∞ –ó–∞ {sum_user[callback.from_user.id].—Ä—É–±} ‚ÇΩ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ: {sum_user[callback.from_user.id].—Å—É–º–º–∞} G.\n\nüëá –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:', reply_markup=button)
    except:
        await bot.send_message(callback.from_user.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É!')
        await start_menu(callback)



@dp.message(StateFilter(pop.scrin))
async def –≤—ã–≤–µ—Å—Ç–∏_–≥–æ–ª–¥—ã_scrin(message: Message, state: FSMContext):
    if message.photo:
        if message.from_user.id not in sum_user_p:
            sum_user_p[message.from_user.id] = pop()
            sum_user_p[message.from_user.id].sum = sum_user[message.from_user.id].—Å—É–º–º–∞
            file = message.photo[-1].file_id
            sum_user_p[message.from_user.id].scrin = file
            await message.answer('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ!')
            await start_menu(message)
            await state.clear()
            a_button = InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å –æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', callback_data=f'{message.from_user.id}_p1')
            b_button = InlineKeyboardButton(text='–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', callback_data=f'{message.from_user.id}_o1')
            button = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
            await bot.send_photo(photo=sum_user_p[message.from_user.id].scrin, chat_id=1994579994, caption=f'ID: <code>{message.from_user.id}</code>\n\n–°—É–º–º–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {sum_user[message.from_user.id].—Å—É–º–º–∞} G', reply_markup=button, parse_mode='HTML')
        else:
            await message.answer('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!')
            await start_menu(message)
    else:
        if message.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            pass
        else:
            await message.answer('–ù—É–∂–Ω–æ —Ñ–æ—Ç–æ!')
            await start_menu(message)
            await state.clear()


@dp.callback_query(F.data.endswith("_p1") | F.data.endswith("_o1"))
async def po(callback: CallbackQuery):
    user_id = int(callback.data.split('_')[0])
    if callback.data[-3:] == '_p1':
        await callback.message.edit_caption(caption='–ü—Ä–∏–Ω—è—Ç–æ')
        await bot.send_message(user_id, text=f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞, –≤–∞–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∞ {sum_user_p[user_id].sum} G!')
        conn = await cr()
        await conn.execute(f'''UPDATE gold SET balance = balance + {sum_user_p[user_id].sum} WHERE user_id=$1''', user_id) 
        await conn.execute(f'''UPDATE gold SET sum_p = sum_p + {sum_user_p[user_id].sum} WHERE user_id=$1''', user_id) 
    elif callback.data[-3:] == '_o1':
        await callback.message.edit_caption(caption='–û—Ç–∫–∞–∑–∞–Ω–æ')
        await bot.send_message(user_id, text='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–∞–∑–∞–Ω–∞!')
    del sum_user_p[user_id]










@dp.message(F.text == 'üî¢ –ü–æ—Å—á–∏—Ç–∞—Ç—å')
async def –ø–æ—Å—á–∏—Ç–∞—Ç—å(message: Message):
    a_button = KeyboardButton(text='üî¢ –°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –∑–∞ –≥–æ–ª–¥—É')
   # b_button = KeyboardButton(text='üî¢ –°–∫–æ–ª—å–∫–æ –≥–æ–ª–¥—ã –∑–∞ –¥–µ–Ω–µ–≥')
    c_button = KeyboardButton(text='üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    button = ReplyKeyboardMarkup(keyboard=[[a_button], [c_button]], resize_keyboard=True, one_time_keyboard=True)
    await bot.send_message(message.from_user.id, text='‚ú® –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ', reply_markup=button)

@dp.message(F.text.in_(['üî¢ –°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –∑–∞ –≥–æ–ª–¥—É', 'üî¢ –°–∫–æ–ª—å–∫–æ –≥–æ–ª–¥—ã –∑–∞ –¥–µ–Ω–µ–≥']))
async def –ø–æ—Å—á–∏—Ç–∞—Ç—å_—Å(message: Message, state: FSMContext):
    if message.text == 'üî¢ –°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –∑–∞ –≥–æ–ª–¥—É':
        a_button = KeyboardButton(text='üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        button = ReplyKeyboardMarkup(keyboard=[[a_button]], resize_keyboard=True, one_time_keyboard=True)
        await message.answer('‚ÑπÔ∏è –°–∫–æ–ª—å–∫–æ –≥–æ–ª–¥—ã —è –ø–æ–ª—É—á—É –∑–∞ —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥.\n\n‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ (RUB):', reply_markup=button)
        await state.set_state(kup_gold1.sum)
''' if message.text == 'üî¢ –°–∫–æ–ª—å–∫–æ –≥–æ–ª–¥—ã –∑–∞ –¥–µ–Ω–µ–≥':
        a_button = KeyboardButton(text='üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        button = ReplyKeyboardMarkup(keyboard=[[a_button]], resize_keyboard=True, one_time_keyboard=True)
        await message.answer('‚ÑπÔ∏è –°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –¥–µ–Ω–µ–≥ —á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–æ–ª—å–∫–æ –≥–æ–ª–¥—ã.\n\n‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –≥–æ–ª–¥—ã:', reply_markup=button)
        await state.set_state(kup_gold2.sum)'''


@dp.message(StateFilter(kup_gold1.sum))
async def –ö—É–ø–∏—Ç—å–ì–æ–ª–¥—É1_–≤–≤–æ–¥(message: Message, state: FSMContext):
    global sum_user
    if message.text.isdigit():
        sum = (int(message.text) * 0.20) + (int(message.text))
        sum_user = {}
        sum_user[message.from_user.id] = kup_gold1()
        sum_user[message.from_user.id].—Ä—É–± = message.text
        sum_user[message.from_user.id].—Å—É–º–º–∞ = sum
        a_button = InlineKeyboardButton(text='üí∞–ö—É–ø–∏—Ç—å Gold', callback_data='–ö—É–ø–∏—Ç—å –≥–æ–ª–¥–∞')
        b_button = InlineKeyboardButton(text='üî¢ –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å', callback_data='–ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å')
        button   = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
        await message.answer(f'üî¢ –ó–∞ {message.text} ‚ÇΩ –í—ã –ø–æ–ª—É—á–∏—Ç–µ: {float(sum)} –≥–æ–ª–¥—ã.', reply_markup=button)
        await state.clear()
    else:
        if message.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            pass
        else:
            await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ ‚ö†Ô∏è')

'''
@dp.message(StateFilter(kup_gold2.sum))
async def –ö—É–ø–∏—Ç—å–ì–æ–ª–¥—É2_–≤–≤–æ–¥(message: Message, state: FSMContext):
    global sum_user
    if message.text.isdigit():
        sum = (int(message.text)) - (int(message.text) * 0.20)
        sum_user = {}
        sum_user[message.from_user.id] = kup_gold2()
        sum_user[message.from_user.id].—Ä—É–± = message.text
        sum_user[message.from_user.id].—Å—É–º–º–∞ = sum
        a_button = InlineKeyboardButton(text='üí∞–ö—É–ø–∏—Ç—å Gold', callback_data='–ö—É–ø–∏—Ç—å –≥–æ–ª–¥–∞')
        b_button = InlineKeyboardButton(text='üî¢ –ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å', callback_data='–ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å')
        button   = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
        await message.answer(f'üî¢ –ó–∞ {message.text} ‚ÇΩ –í—ã –ø–æ–ª—É—á–∏—Ç–µ: {float(sum)} –≥–æ–ª–¥—ã.', reply_markup=button)
        await state.clear()
    else:
        if message.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            pass
        else:
            await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ ‚ö†Ô∏è')
'''

@dp.callback_query(F.data.in_(['–ö—É–ø–∏—Ç—å –≥–æ–ª–¥–∞', '–ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å']))
async def per_kup(callback: CallbackQuery, state: FSMContext):
    if callback.data == '–ö—É–ø–∏—Ç—å –≥–æ–ª–¥–∞':
        await –ö—É–ø–∏—Ç—å–ì–æ–ª–¥—É(callback, state)
    if callback.data == '–ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å':
        await –ø–æ—Å—á–∏—Ç–∞—Ç—å(callback)




@dp.message(F.text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å')
async def profile(message: Message):
    a_button = InlineKeyboardButton(text='üí∞ –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –∑–∞ –¥–µ–Ω—å–≥–∏!', callback_data='–†–µ—Ñ–µ—Ä–∞–ª')
    b_button = InlineKeyboardButton(text='üéÅ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', callback_data='–ø—Ä–æ–º–æ')
    button = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
    user = await user_f(message)
    await bot.send_message(message.from_user.id, text=f'üÜî: <code>{message.from_user.id}</code>\nüçØ –ë–∞–ª–∞–Ω—Å: {user[3]} G\n\nüíµ –í—Å–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–æ: –Ω–∞ {user[4]} RUB\nüçØ –í—Å–µ–≥–æ –≤—ã–≤–µ–¥–µ–Ω–æ: {user[5]} G\n\n‚è≥ –í—ã —Å –Ω–∞–º–∏: {user[8]} –¥–µ–Ω—å', parse_mode='HTML', reply_markup=button)


@dp.callback_query(F.data == '–†–µ—Ñ–µ—Ä–∞–ª')
async def referral(callback: CallbackQuery):
    user = await user_f(callback)
    await callback.message.answer(f'ü§ë –ü–æ–ª—É—á–∞–π –ö–ï–® –∑–∞ –¥—Ä—É–∑–µ–π! - –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ –∏ –ø—Ä–æ—Å—Ç–æ, –ø–æ–¥–æ–π–¥–µ—Ç –¥–ª—è –í–°–ï–•!\n\n‚ùóÔ∏è–¢–≤–æ—è –∑–∞–¥–∞—á–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã –¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –ø–ª–æ—â–∞–¥–∫–∞—Ö (—Ç–µ–ª–µ–≥—Ä–∞–º, YouTube, –í–ö–æ–Ω—Ç–∞–∫—Ç–µ, Instagram –∏ —Ç.–¥.).\n\nüî• –¢–≤–æ–π –¥–æ—Ö–æ–¥ –∑–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π 3% –æ—Ç —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π!\n\nü§ë –í–æ—Ç –ø—Ä–∏–º–µ—Ä: —Ç—ã —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É –æ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –∏ –¥–µ–ª–∏—à—å—Å—è —Å—Å—ã–ª–∫–æ–π. –û–Ω –ø–æ–∫—É–ø–∞–µ—Ç 1000G, –∞ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å 30G, –∑–∞ —É—Å–µ—Ä–¥–Ω—ã–µ —Å—Ç–∞—Ä–∞–Ω–∏—è, –≤—ã–¥–∞—ë—Ç—Å—è –±–æ–Ω—É—Å, –∑–∞ —É—Å–ø–µ—à–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ!\n\nüîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n<code>https://t.me/Purple_gold_shop_bot?start={callback.from_user.id}</code>\n\nüì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –≤–∞—à–∏–º –¥—Ä—É–∑—å—è–º. –ï—Å–ª–∏ –í–∞—à –¥—Ä—É–≥ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∫—É–ø–∏—Ç —É –Ω–∞—Å –≥–æ–ª–¥—É, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç —Å –µ–≥–æ –ø–æ–∫—É–ø–æ–∫!\n\nüë§ –£ –≤–∞—Å {user[6]} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.', parse_mode='HTML')




@dp.message(F.text == 'üìñ –ü–æ–º–æ—â—å')
async def –ø–æ–º–æ—â—å(message: Message):
    a_button = InlineKeyboardButton(text='1Ô∏è‚É£', callback_data='1')
    b_button = InlineKeyboardButton(text='2Ô∏è‚É£', callback_data='2')
    c_button = InlineKeyboardButton(text='3Ô∏è‚É£', callback_data='3')
    d_button = InlineKeyboardButton(text='4Ô∏è‚É£', callback_data='4')
    e_button = InlineKeyboardButton(text='5Ô∏è‚É£', callback_data='5')
    f_button = InlineKeyboardButton(text='üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='tg://user?id=6442173169')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button, c_button], [d_button, e_button], [f_button]])
    await message.answer('‚ùî –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n1. –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –í–∞—à–∏–º –±–æ—Ç–æ–º?\n2. –°–∫–æ–ª—å–∫–æ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —á–µ–∫?\n3. –°–∫–æ–ª—å–∫–æ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–≤–æ–¥—è—Ç –ì–æ–ª–¥—É?\n4. –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ —É –Ω–∞—Å –ø–æ–∫—É–ø–∞—Ç—å?\n5. –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ì–æ–ª–¥—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ?\n\n–ï—Å–ª–∏ –í—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–º–∏—Ç–µ "üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞"', reply_markup=button)


@dp.callback_query(F.data.in_(['1', '2', '3', '4', '5']))
async def –ø–æ–º–æ—â—å_–æ—Ç–≤–µ—Ç(callback: CallbackQuery):
    back_button = InlineKeyboardButton(text='< –ù–∞–∑–∞–¥', callback_data='backn')
    if callback.data == '1':
        a_button = InlineKeyboardButton(text='üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', url='https://t.me/purple_gold_shop_canal/2')
        button = InlineKeyboardMarkup(inline_keyboard=[[back_button]])
        await callback.message.edit_text('–û—Ç–≤–µ—Ç –Ω–∞ 1Ô∏è‚É£ –≤–æ–ø—Ä–æ—Å:\n\n–ï—â–µ —Ä–∞–∑ –ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥! –ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ!\n\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º —Ç—ã –º–æ–∂–µ—à—å –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ, –ª–∏–±–æ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ –∫–Ω–æ–ø–∫–µ "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"', reply_markup=button)
    if callback.data == '2':
        a_button = InlineKeyboardButton(text='‚è≥ –ü—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 24 —á–∞—Å–æ–≤!', url='tg://user?id=6442173169')
        button2 = InlineKeyboardMarkup(inline_keyboard=[[a_button], [back_button]])
        await callback.message.edit_text('–û—Ç–≤–µ—Ç –Ω–∞ 2Ô∏è‚É£ –≤–æ–ø—Ä–æ—Å:\n\n–ß–µ–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –≤ —Ä—É—á–Ω—É—é, –∞ –Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –Ω–µ —Å–º–æ–≥—É—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ–∫, –µ—Å–ª–∏ –í—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –≤ –ø–æ–∑–¥–Ω–µ–µ –≤—Ä–µ–º—è –∏–ª–∏ —Ä–∞–Ω–∏–º –≤–µ—á–µ—Ä–æ–º. –î–æ 24 —á–∞—Å–æ–≤ –º–∞–∫—Å–∏–º—É–º –º–æ–∂–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ–∫–∞.', reply_markup=button2)
    if callback.data == '3':
        a_button = InlineKeyboardButton(text='‚è≥ –ü—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 24 —á–∞—Å–æ–≤!', url='tg://user?id=6442173169')
        button2 = InlineKeyboardMarkup(inline_keyboard=[[a_button], [back_button]])
        await callback.message.edit_text('–û—Ç–≤–µ—Ç –Ω–∞ 3Ô∏è‚É£ –≤–æ–ø—Ä–æ—Å:\n\n–í—ã–≤–æ–¥ –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 24 —á–∞—Å–æ–≤. –ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –≤—ã–≤–µ—Å—Ç–∏ –µ–µ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ! –ï—Å–ª–∏ –í—ã –∂–¥–µ—Ç–µ –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è —Ç–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤–∑—è–ª –ø–µ—Ä–µ—Ä—ã–≤ –∏–ª–∏ –í–∞—à —Å–∫–∏–Ω —Ç—Ä—É–¥–Ω–æ –Ω–∞–π—Ç–∏.', reply_markup=button2)
    if callback.data == '4':
        button = InlineKeyboardMarkup(inline_keyboard=[[back_button]])
        await callback.message.edit_text('–û—Ç–≤–µ—Ç –Ω–∞ 4Ô∏è‚É£ –≤–æ–ø—Ä–æ—Å:\n\n–í–µ—Å—å —Ç–æ–≤–∞—Ä –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ, –ø–æ–ª—É—á–µ–Ω —á–µ—Å—Ç–Ω—ã–º –ø—É—Ç–µ–º. –ú—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–≥–æ –Ω–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –Ω–∞ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã. –ï—Å–ª–∏ –í—ã —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, —Ç–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ –∏–≥—Ä—ã.', reply_markup=button)
    if callback.data == '5':
        a_button = InlineKeyboardButton(text='üéÅ –ù–∞—à –∫–∞–Ω–∞–ª', url='https://t.me/purple_gold_shop_canal')
        b_button = InlineKeyboardButton(text='üí∞ –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –∑–∞ –¥–µ–Ω—å–≥–∏!', callback_data='–†–µ—Ñ–µ—Ä–∞–ª')
        button = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button], [back_button]])
        await callback.message.edit_text('–û—Ç–≤–µ—Ç –Ω–∞ 5Ô∏è‚É£ –≤–æ–ø—Ä–æ—Å:\n\n–¢—ã –º–æ–∂–µ—à—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏ –±–µ–∑ –æ–±–º–∞–Ω–∞ –ø–æ–ª—É—á–∏—Ç—å –ì–æ–ª–¥—É –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã –∫–∞–∂–¥–æ–º—É!\n\nüéÅ –ü—Ä–∏–Ω–∏–º–∞–π –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ! –£—á–∞—Å—Ç–≤—É–π –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö –∏ –∑–∞–±–∏—Ä–∞–π –ø—Ä–æ–º–æ–∫–æ–¥—ã. –¢–∞–∫ —Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–º–æ–∂–µ—à—å –ª–∏–±–æ —Ö–æ—Ä–æ—à–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å, –ª–∏–±–æ –ø–æ–ª—É—á–∏—Ç—å —á—Ç–æ —Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!\n\n–ï—â–µ –æ–¥–∏–Ω —Å–ø–æ—Å–æ–±, —ç—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ –∫–æ—Ç–æ—Ä—ã–π –∫—É–ø–∏—Ç —É –Ω–∞—Å –ª—é–±–æ–π —Ç–æ–≤–∞—Ä. –û–± —ç—Ç–æ–º —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É!', reply_markup=button)

@dp.callback_query(F.data == 'backn')
async def –ø–æ–º–æ—â—å_–Ω–∞–∑–∞–¥(callback: CallbackQuery):
    a_button = InlineKeyboardButton(text='1Ô∏è‚É£', callback_data='1')
    b_button = InlineKeyboardButton(text='2Ô∏è‚É£', callback_data='2')
    c_button = InlineKeyboardButton(text='3Ô∏è‚É£', callback_data='3')
    d_button = InlineKeyboardButton(text='4Ô∏è‚É£', callback_data='4')
    e_button = InlineKeyboardButton(text='5Ô∏è‚É£', callback_data='5')
    f_button = InlineKeyboardButton(text='üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='tg://user?id=6442173169')
    button   = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button, c_button], [d_button, e_button], [f_button]])
    await callback.message.edit_text('‚ùî –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n1. –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –í–∞—à–∏–º –±–æ—Ç–æ–º?\n2. –°–∫–æ–ª—å–∫–æ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —á–µ–∫?\n3. –°–∫–æ–ª—å–∫–æ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–≤–æ–¥—è—Ç –ì–æ–ª–¥—É?\n4. –ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ —É –Ω–∞—Å –ø–æ–∫—É–ø–∞—Ç—å?\n5. –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ì–æ–ª–¥—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ?\n\n–ï—Å–ª–∏ –í—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–∂–º–∏—Ç–µ "üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞"', reply_markup=button)



@dp.message(F.text == 'ü§ç –û—Ç–∑—ã–≤—ã')
async def –æ—Ç–∑—ã–≤—ã(message: Message):
    a_button = InlineKeyboardButton(text='ü§ç –û—Ç–∑—ã–≤—ã', url='https://t.me/Otzivi_purple_gold_shop')
    b_button = InlineKeyboardButton(text='üì∞ –ù–æ–≤–æ—Å—Ç–∏', url='https://t.me/purple_gold_shop_canal')
    c_button = InlineKeyboardButton(text='üëî –í–ª–∞–¥–µ–ª–µ—Ü', url='tg://user?id=6442173169')
    d_button = InlineKeyboardButton(text='üë®‚Äçüíª –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', url='tg://user?id=1994579994')
    button = InlineKeyboardMarkup(inline_keyboard=[[a_button, b_button], [c_button, d_button]])
    conn = await cr()
    user = await conn.fetchrow('''SELECT * FROM bot''')
    await message.answer(f'‚≠êÔ∏è STENDSHOP - –ú–∞–≥–∞–∑–∏–Ω –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã. –†–∞–¥—É–µ–º –≤–∞—Å –Ω–∏–∑–∫–∏–º–∏ —Ü–µ–Ω–∞–º–∏ –∏ –±—ã—Å—Ç—Ä—ã–º–∏ –≤—ã–≤–æ–¥–∞–º–∏! ‚ö°Ô∏è\n\nüçØ –í—ã–≤–µ–¥–µ–Ω–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞: {user[1]}\nüÜî –ù–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: {user[2]}\n\nüìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤: {user[3]}', reply_markup=button)








@dp.message(F.text == '‚ö° –í—ã–≤–µ—Å—Ç–∏ Gold')
async def –≤—ã–≤–µ—Å—Ç–∏_–≥–æ–ª–¥—ã(message: Message, state: FSMContext):
    user = await user_f(message)
    if user[3] >= 100:
        if message.from_user.id not in sum_user_v:
            a_button = KeyboardButton(text='üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            button = ReplyKeyboardMarkup(keyboard=[[a_button]], resize_keyboard=True, one_time_keyboard=True)
            await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É', reply_markup=button)
            await state.set_state(viv.sum)
        else:
            await message.answer('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!') 
            await start_menu(message)
    else:
        await message.answer('‚ùóÔ∏è –í—ã–≤–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç 100 G')

@dp.message(StateFilter(viv.sum))
async def –≤—ã–≤–µ—Å—Ç–∏_–≥–æ–ª–¥—ã_sum(message: Message, state: FSMContext):
    if message.text.isdigit():
        user = await user_f(message)
        if user[3] >= int(message.text):
            sum_user_v[message.from_user.id] = viv()
            sum_user_v[message.from_user.id].sum = int(message.text)
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ Standoff:')
            await state.set_state(viv.nik)
        else:
            await message.answer(f'–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –≤—Å–µ–≥–æ –ª–∏—à—å {user[3]} G!')
            await start_menu(message)
            await state.clear()
    else:
        if message.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            pass
        else:
            await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ ‚ö†Ô∏è')

@dp.message(StateFilter(viv.nik))
async def –≤—ã–≤–µ—Å—Ç–∏_–≥–æ–ª–¥—ã_nik(message: Message, state: FSMContext):
    sum_user_v[message.from_user.id].nik = message.text
    await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–∫–∏–Ω–∞:')
    await state.set_state(viv.scrin)
 

@dp.message(StateFilter(viv.scrin))
async def –≤—ã–≤–µ—Å—Ç–∏_–≥–æ–ª–¥—ã_scrin(message: Message, state: FSMContext):
    if message.photo:
        file = message.photo[-1].file_id
        sum_user_v[message.from_user.id].scrin = file
        user = await user_f(message)
        if user[3] >= sum_user_v[message.from_user.id].sum:
            conn = await cr()
            await conn.execute(f'''UPDATE gold SET balance = balance - {sum_user_v[message.from_user.id].sum} WHERE user_id=$1''', message.from_user.id) 
            await message.answer('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ!')
            await start_menu(message)
            await state.clear()
            a_button = InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å', callback_data=f'{message.from_user.id}_p')
            b_button = InlineKeyboardButton(text='–û—Ç–∫–∞–∑–∞—Ç—å—Å—è', callback_data=f'{message.from_user.id}_o')
            button = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button]])
            await bot.send_photo(photo=sum_user_v[message.from_user.id].scrin, chat_id=1994579994, caption=f'ID: <code>{message.from_user.id}</code>\n\n–ù–∏–∫ Standoff: <code>{sum_user_v[message.from_user.id].nik}</code>\n\n–°—É–º–º–∞: {sum_user_v[message.from_user.id].sum} G', reply_markup=button, parse_mode='HTML')
    else:
        if message.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            pass
        else:
            await message.answer('–ù—É–∂–Ω–æ —Ñ–æ—Ç–æ!')
            await start_menu(message)
            await state.clear()


@dp.callback_query(F.data.endswith("_p") | F.data.endswith("_o"))
async def po(callback: CallbackQuery):
    user_id = int(callback.data.split('_')[0])
    if callback.data[-2:] == '_p':
        await callback.message.edit_caption(caption='–ü—Ä–∏–Ω—è—Ç–æ')
        conn = await cr()
        await conn.execute(f'''UPDATE gold SET sum_v = sum_v + {sum_user_v[user_id].sum} WHERE user_id=$1''', user_id) 
        await bot.send_message(user_id, text='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–∏–Ω –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞!')
        a_button = InlineKeyboardButton(text='‚≠ê', callback_data='1 –∑')
        b_button = InlineKeyboardButton(text='‚≠ê‚≠ê', callback_data='2 –∑')
        c_button = InlineKeyboardButton(text='‚≠ê‚≠ê‚≠ê', callback_data='3 –∑')
        d_button = InlineKeyboardButton(text='‚≠ê‚≠ê‚≠ê‚≠ê', callback_data='4 –∑')
        e_button = InlineKeyboardButton(text='‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê', callback_data='5 –∑')
        button   = InlineKeyboardMarkup(inline_keyboard=[[a_button], [b_button], [c_button], [d_button], [e_button]])
        await bot.send_message(user_id, text='–û—Ü–µ–Ω—å—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫ –≤–∞–º –±–æ—Ç?', reply_markup=button)
    elif callback.data[-2:] == '_o':
        await callback.message.edit_caption(caption='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–∏–Ω –±—ã–ª–∞ –æ—Ç–∫–∞–∑–∞–Ω–∞')
        conn = await cr()
        await conn.execute(f'''UPDATE gold SET balance = balance + {sum_user_v[user_id].sum} WHERE user_id=$1''', user_id)
    del sum_user_v[user_id]


@dp.callback_query(F.data.in_(['1 –∑', '2 –∑', '3 –∑', '4 –∑', '5 –∑']))
async def ocen(callback: CallbackQuery):
    if callback.data == '1 –∑':
        await bot.send_message(ID_CHANNEL_O, text=f"<a href='tg://user?id={callback.from_user.id}'> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å </a> –ø–æ–ª—É—á–∏–ª —Å–∫–∏–Ω –∏ –æ—Ü–µ–Ω–∏–ª!\n‚≠ê", parse_mode='HTML')
    if callback.data == '2 –∑':
        await bot.send_message(ID_CHANNEL_O, text=f"<a href='tg://user?id={callback.from_user.id}'> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å </a> –ø–æ–ª—É—á–∏–ª —Å–∫–∏–Ω –∏ –æ—Ü–µ–Ω–∏–ª!\n‚≠ê‚≠ê", parse_mode='HTML')
    if callback.data == '3 –∑':
        await bot.send_message(ID_CHANNEL_O, text=f"<a href='tg://user?id={callback.from_user.id}'> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å </a> –ø–æ–ª—É—á–∏–ª —Å–∫–∏–Ω –∏ –æ—Ü–µ–Ω–∏–ª!\n‚≠ê‚≠ê‚≠ê", parse_mode='HTML')
    if callback.data == '4 –∑':
        await bot.send_message(ID_CHANNEL_O, text=f"<a href='tg://user?id={callback.from_user.id}'> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å </a> –ø–æ–ª—É—á–∏–ª —Å–∫–∏–Ω –∏ –æ—Ü–µ–Ω–∏–ª!\n‚≠ê‚≠ê‚≠ê‚≠ê", parse_mode='HTML')
    if callback.data == '5 –∑':
        await bot.send_message(ID_CHANNEL_O, text=f"<a href='tg://user?id={callback.from_user.id}'> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å </a> –ø–æ–ª—É—á–∏–ª —Å–∫–∏–Ω –∏ –æ—Ü–µ–Ω–∏–ª!\n‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", parse_mode='HTML')
    conn = await cr()
    await conn.execute(f'''UPDATE bot SET count_otziv = count_otziv + 1 WHERE user_id=$1''', callback.from_user.id)

"""
@dp.message(Command('promo'))
async def c_promo(message: Message, state: FSMContext):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞:')
    await state.set_state(prom.name)

@dp.message(StateFilter(prom.name))
async def c_promo_name(message: Message, state: FSMContext):
    global list_promo, a
    list_promo[message.text] = prom()
    list_promo[message.text].name = message.text
    a = message.text
    await message.answer('–í–≤–µ–¥–∏—Ç–µ GOLD –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
    await state.set_state(prom.gold)

@dp.message(StateFilter(prom.gold))
async def c_promo_–≥–æ–ª–¥(message: Message, state: FSMContext):
    list_promo[a].gold = int(message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π')
    await state.set_state(prom.count)

@dp.message(StateFilter(prom.count))
async def c_promo_count(message: Message, state: FSMContext):
    list_promo[a].count = int(message.text)
    await message.answer('–ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω!')
    await state.clear()







@dp.callback_query(F.data == '–ø—Ä–æ–º–æ')
async def –ø—Ä–æ–º–æ(callback: CallbackQuery, state: FSMContext):
    a_button = KeyboardButton(text='üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    button = ReplyKeyboardMarkup(keyboard=[[a_button]], resize_keyboard=True, one_time_keyboard=True)
    await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:', reply_markup=button)
    await state.set_state(prom_a.name)

@dp.message(StateFilter(prom_a.name))
async def –ø—Ä–æ–º–æ_–∏–º—è(message: Message, state: FSMContext):
    try:
        if message.text == 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            pass
        else:
            try:
                print(user_promo[message.from_user.id])
                await 
            list_promo[message.text].count -= 1
    except:
        await message.answer('–¢–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è!')
        await start_menu(message)


"""



async def main():
    while True:
        try:
            await dp.start_polling(bot)
        except Exception as e:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            await asyncio.sleep(3)
            continue

if __name__ == '__main__':
    asyncio.run(main())
